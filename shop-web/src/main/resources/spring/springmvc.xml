<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<mvc:resources location="/resources/" mapping="/resources/**"/>
	<mvc:annotation-driven />
	<context:annotation-config /> 
	<!-- 设置使用注解的类所在的jar包 -->
	<context:component-scan base-package="org.yy.paipai.shop.controller"></context:component-scan>

	<!-- mvc拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor> <!-- 可以增加多个拦截器 -->
			<mvc:mapping path="/**" /> <!-- 需要拦截的 -->
			<mvc:exclude-mapping path="/" />	<!-- 用于鉴权的根路径要过滤 -->
			<mvc:exclude-mapping path="/common/**" />	<!-- 公共文件及资源要过滤 -->
			<mvc:exclude-mapping path="/**/*.js" />
			<mvc:exclude-mapping path="/**/*.css" />
			<mvc:exclude-mapping path="/**/*.png" />
			<mvc:exclude-mapping path="/**/*.jpg" />
			<mvc:exclude-mapping path="/**/*.gif" />
			<bean class="org.yy.paipai.shop.interceptor.AuthHandlerInterceptor">
				<constructor-arg index="0" value=""></constructor-arg>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />


	<!-- 启动JSON格式的配置,当有@ResponseBody元数据时，会使用它转换返回对象 -->
	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable 
			representation -->
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>  
		</property>
	</bean>
	<!-- fastjson方式 <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"> 
		</bean> -->



	<!-- 上传拦截，如最大上传值及最小上传值 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000" /><!-- 设置允许上传的最大文件大小，以字节为单位计算。当设为-1时表示无限制，默认是-1。 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="uploadTempDir" value="/home/zhouliang"></property><!-- 设置上传文件时的临时目录，默认是Servlet容器的临时目录。 -->
		<property name="maxInMemorySize" value="10240"></property><!--设置在文件上传时允许写到内存中的最大值，以字节为单位计算，默认是10240。 -->
	</bean>


	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json返回json格式数据 /blog/1.xml返回xml格式数据 
		/blog.do返回jsp -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">

		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<!-- spring3.1的配置模式 -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>

		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/pages/" />
					<property name="suffix" value=".jsp"></property>
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json org.springframework.web.servlet.view.json.MappingJacksonJsonView -->
				<bean class="org.yy.framework.base.view.FrameworkJacksonJsonView">
					<!-- 只处理非空值 -->
					<property name="objectMapper">
						<bean class="com.fasterxml.jackson.databind.ObjectMapper">
							<property name="serializationInclusion">
								<value
									type="com.fasterxml.jackson.annotation.JsonInclude$Include">NON_NULL</value>
							</property>
						</bean>
					</property>
				</bean>
				<!-- fastjson方式 --><!-- <bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView"> 
					<property name="charset" value="UTF8" /> </bean> -->


				<!-- for application/xml -->
				<!-- <bean class="org.springframework.web.servlet.view.xml.MarshallingView" 
					> <property name="marshaller"> <bean class="org.springframework.oxm.xstream.XStreamMarshaller"/> 
					</property> </bean> -->
			</list>
		</property>
	</bean>


	<!-- 服务化文档spring配置 -->
	<!-- 
	<bean id="simpleUrlMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/document.do">document</prop>
			</props>
		</property>
	</bean>
	<bean id="document" class="org.yy.framework.document.controller.DocumentController">
		<constructor-arg index="0">
			<list>
				<value>org.yy.user.model</value>
				<value>org.yy.user.dto</value>
			</list>
		</constructor-arg>
	</bean> -->


	<!-- 业务异常处理 -->
	<bean id="exceptionResolver" class="org.yy.framework.base.exception.AppExceptionResolver">
	</bean>


</beans>